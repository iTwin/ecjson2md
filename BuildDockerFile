# Name of the npm package to publish
ARG PACKAGE_NAME=ecjson2md

FROM debian:latest

ENV DEBIAN_FRONTEND noninteractive

# Update package manager and install packages
RUN apt-get update && apt-get install gnupg curl nuget mono-complete python git -y

# Install Nodejs and NPM
RUN curl -sL https://deb.nodesource.com/setup_8.x | bash - && apt-get install nodejs -y

# Update NPM and install needed packages
RUN npm install npm@latest -g && npm install -g typescript

## Configure git
# RUN git config --global user.email "" && git config --global user.name ""

# Configure npm (using anonymous access)
RUN npm config set @bentley:registry https://registry.npmjs.org/

# Add repo from context
ADD . /npm_package/

# Install the package
WORKDIR npm_package
RUN npm install

# Run tests
RUN node node_modules/@bentley/bentleyjs-tools/scripts/test-tsnode.js --testDir ./test/ --tscPaths

# Build
RUN tsc

# Cover
RUN npm run cover

# Pack
RUN npm pack

# Update nuget
RUN nuget update -self

WORKDIR /

# Install BdfGenerator
RUN nuget install -NonInteractive  -Source 

WORKDIR /npm_package/

# Get the local and server version, create the BDF, publish (if appropriate) the package,
RUN export locVersion=$(find bentley-ecjson2md-*.tgz | cut -d "-" -f3 | cut -c 1-5); \
  export latestCommit=$(git rev-parse HEAD); \
  export serVesion=$(npm view "@bentley/"${PACKAGE_NAME} version); \
  echo "##vso[task.setvariable variable=localVersion]$locVersion" \
  echo "##vso[task.setvariable variable=serverVersion]$serVersion" \
  mono /.*/tools/.exe --source /npm_package/ --name @bentley/${PACKAGE_NAME} --version $locVersion.0 --productid 123 --branch master --sourceurl Platform%20Technology/_git/${PACKAGE_NAME} --changeset $latestCommit --usePackageJson --buildtype npm --bdfout /npm_package/@bentley-ecjson2md.bdf;

## Publish the bdf
# RUN bdfStuff=$(cat *.bdf); \
# curl \
#   --request POST \
#   --header "Content-Type: text/json" \
#   --header "From: " \
#   --data @${PACKAGE_NAME}.bdf ;